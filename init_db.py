from vector_storage import VectorDB
from pathlib import Path
import sys

def initialize_vector_db(emb_model, force_reload=False):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –ë–î –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
    
    Args:
        force_reload: –ï—Å–ª–∏ True, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–∞–∂–µ –µ—Å–ª–∏ –ë–î –Ω–µ –ø—É—Å—Ç–∞—è
    """
    
    # –°–æ–∑–¥–∞–µ–º –≤–µ–∫—Ç–æ—Ä–Ω—É—é –ë–î
    db = VectorDB(emb_model, persist_dir="./vector_db")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    stats = db.get_stats()
    
    if stats['total_documents'] > 0 and not force_reload:
        print(f"‚úÖ –ë–î —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {stats['total_documents']}")
        return db
    
    # –ï—Å–ª–∏ –ë–î –ø—É—Å—Ç–∞—è –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
    if force_reload and stats['total_documents'] > 0:
        print("‚ö†Ô∏è –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ë–î –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏...")
        # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é
        db.collection.delete()
        db = VectorDB(emb_model, persist_dir="./vector_db")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ data.json
    if Path("model_creating/data.json").exists():
        print("üìÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ data.json...")
        db.load_documents_from_json("model_creating/data.json")
    else:
        print("‚ùå –§–∞–π–ª data.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ make_data.ipynb")
        return None
    
    return db

def test_search(db):
    """–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∏—Å–∫–∞"""
    
    print("\n" + "="*50)
    print("üîç –¢–ï–°–¢ –ü–û–ò–°–ö–ê")
    print("="*50)
    
    test_queries = [
        "–õ–∏—Å—Ç–∏–∫–∏ –ø–æ–∂–µ–ª—Ç–µ–ª–∏",
        "–ö–∞–∫—Ç—É—Å—ã —Ö–æ—Ä–æ—à–∏–µ",
        "–ü–æ–ª–∏–≤ —Ä–∞—Å—Ç–µ–Ω–∏–π"
    ]
    
    for query in test_queries:
        print(f"\nüìç ÔøΩÔøΩ–∞–ø—Ä–æ—Å: '{query}'")
        results = db.search(query, k=2)
        
        for i, result in enumerate(results, 1):
            print(f"  {i}. –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {(1-result['distance'])*100:.1f}%")
            print(f"     –ù–∞—á–∞–ª–æ —Ç–µ–∫—Å—Ç–∞: {result['text'][:100]}...")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    force_reload = '--force' in sys.argv
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    db = initialize_vector_db(force_reload=force_reload)
    
    if db:
        # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
        if '--test' in sys.argv:
            test_search(db)